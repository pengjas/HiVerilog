Please act as a professional Verilog designer.

Implement a modular frequency divider that takes an input clock frequency of 100MHz and generates three output clock frequencies: 50MHz, 10MHz, and 1MHz.

Module name:
freq_div

Input ports:
CLK_in: Input clock signal
RST: Reset signal

Output ports:
CLK_50: Output clock signal with a frequency of CLK_in divided by 2.
CLK_10: Output clock signal with a frequency of CLK_in divided by 10.
CLK_1: Output clock signal with a frequency of CLK_in divided by 100.

Implementation:
The module uses three submodules to generate the required clock frequencies:

clk_div_2 generates the 50MHz clock by toggling the output on every positive edge of CLK_in.
clk_div_10 generates the 10MHz clock by counting to 4 and toggling the output.
clk_div_100 generates the 1MHz clock by counting to 49 and toggling the output.
On every positive edge of CLK_in or when RST is active, if RST is asserted, all output clocks are reset to 0. Otherwise, the counters increment accordingly to generate the desired frequencies.

Give me the complete code.