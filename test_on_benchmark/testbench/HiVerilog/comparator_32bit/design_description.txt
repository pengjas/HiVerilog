Please act as a professional Verilog designer.

Implement a module of a 32-bit comparator using submodules with multiple bit-level comparators in combinational logic.

Module name:
    comparator_32bit

Input ports:
    A [31:0]: First 32-bit input operand (binary number to compare).
    B [31:0]: Second 32-bit input operand (binary number to compare).
Output ports:
    A_greater: 1-bit output indicating if A is greater than B.
    A_equal: 1-bit output indicating if A is equal to B.
    A_less: 1-bit output indicating if A is less than B.

Implementation:
Comparison Logic: The module compares the two 32-bit binary numbers A and B using combinational logic.
A subtraction operation is performed: A - B. The result of this subtraction helps determine whether A is greater than, equal to, or less than B.
Carry Generation: If a borrow occurs during the subtraction, A is less than B (A_less).
If no borrow occurs and the result of subtraction is non-zero, A is greater than B (A_greater).
If A and B are equal, the result of subtraction is zero (A_equal).
Modular Design:
The main module (comparator_32bit) instantiates a submodule (subtractor_32bit) that performs the actual subtraction.
The outputs (A_greater, A_equal, A_less) are mutually exclusive, ensuring only one of the three outputs is high (1) at any given time.

Give me the complete code.

 